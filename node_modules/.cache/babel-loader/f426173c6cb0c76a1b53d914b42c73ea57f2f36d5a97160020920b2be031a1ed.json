{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport ResultPage from './components/ResultPage.vue';\nexport default {\n  components: {\n    ResultPage\n  },\n  data() {\n    return {\n      showVoteButtons: false,\n      isVoteFormVisible: false,\n      isResultPageVisible: false,\n      hasVoted: {\n        project: false,\n        people: false,\n        product: false\n      },\n      votedResult: {\n        project: null,\n        people: null,\n        product: null\n      }\n    };\n  },\n  computed: {\n    hasVotedAny() {\n      return this.hasVoted.project || this.hasVoted.people || this.hasVoted.product;\n    }\n  },\n  methods: {\n    toggleVoteButtons() {\n      this.showVoteButtons = true;\n      this.isVoteFormVisible = false;\n      this.isResultPageVisible = false;\n    },\n    showVoteForm(voteType) {\n      this.$router.push({\n        name: 'vote',\n        params: {\n          type: voteType\n        }\n      });\n      this.isVoteFormVisible = true;\n      this.isResultPageVisible = false;\n    },\n    showResultPage() {\n      this.isResultPageVisible = true;\n      this.isVoteFormVisible = false;\n    },\n    onVoteSubmitted(result) {\n      this.hasVoted[result.voteType] = true;\n      this.votedResult[result.voteType] = result;\n    }\n  }\n};","map":{"version":3,"names":["ResultPage","components","data","showVoteButtons","isVoteFormVisible","isResultPageVisible","hasVoted","project","people","product","votedResult","computed","hasVotedAny","methods","toggleVoteButtons","showVoteForm","voteType","$router","push","name","params","type","showResultPage","onVoteSubmitted","result"],"sources":["/Users/wangxiao/voting_front/src/App.vue"],"sourcesContent":["<!-- App.vue -->\n<template>\n  <div id=\"app\">\n    <header>\n      <h1>Blockchain Voting System</h1>\n    </header>\n    <main>\n      <div class=\"button-group\">\n        <button @click=\"toggleVoteButtons\" :disabled=\"hasVotedAny\">Choose Vote</button>\n        <button @click=\"showResultPage\">View Result</button>\n      </div>\n      <div v-if=\"showVoteButtons\" class=\"vote-buttons\">\n        <button @click=\"showVoteForm('project')\" :disabled=\"hasVoted['project']\">Project Vote</button>\n        <button @click=\"showVoteForm('people')\" :disabled=\"hasVoted['people']\">People Vote</button>\n        <button @click=\"showVoteForm('product')\" :disabled=\"hasVoted['product']\">Product Vote</button>\n      </div>\n      <div class=\"vote-form-container\">\n        <router-view v-if=\"isVoteFormVisible\" @vote-submitted=\"onVoteSubmitted\"></router-view>\n        <result-page v-if=\"isResultPageVisible\"></result-page>\n      </div>\n    </main>\n  </div>\n</template>\n\n<script>\nimport ResultPage from './components/ResultPage.vue';\n\nexport default {\n  components: {\n    ResultPage\n  },\n  data() {\n    return {\n      showVoteButtons: false,\n      isVoteFormVisible: false,\n      isResultPageVisible: false,\n      hasVoted: {\n        project: false,\n        people: false,\n        product: false\n      },\n      votedResult: {\n        project: null,\n        people: null,\n        product: null\n      }\n    };\n  },\n  computed: {\n    hasVotedAny() {\n      return this.hasVoted.project || this.hasVoted.people || this.hasVoted.product;\n    }\n  },\n  methods: {\n    toggleVoteButtons() {\n      this.showVoteButtons = true;\n      this.isVoteFormVisible = false;\n      this.isResultPageVisible = false;\n    },\n    showVoteForm(voteType) {\n      this.$router.push({ name: 'vote', params: { type: voteType } });\n      this.isVoteFormVisible = true;\n      this.isResultPageVisible = false;\n    },\n    showResultPage() {\n      this.isResultPageVisible = true;\n      this.isVoteFormVisible = false;\n    },\n    onVoteSubmitted(result) {\n      this.hasVoted[result.voteType] = true;\n      this.votedResult[result.voteType] = result;\n    }\n  }\n};\n</script>\n\n\n\n\n<style>\nheader {\n  background-color: #f0f0f0;\n  padding: 20px;\n  text-align: center;\n}\n\nh1 {\n  margin: 0;\n}\n\n.button-group {\n  margin-top: 20px;\n  text-align: center;\n}\n\n.vote-buttons {\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n}\n\n.vote-buttons button {\n  margin: 0 10px;\n}\n\n.vote-form-container {\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n}\n</style>"],"mappings":";AAyBA,OAAOA,UAAS,MAAO,6BAA6B;AAEpD,eAAe;EACbC,UAAU,EAAE;IACVD;EACF,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,eAAe,EAAE,KAAK;MACtBC,iBAAiB,EAAE,KAAK;MACxBC,mBAAmB,EAAE,KAAK;MAC1BC,QAAQ,EAAE;QACRC,OAAO,EAAE,KAAK;QACdC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;MACX,CAAC;MACDC,WAAW,EAAE;QACXH,OAAO,EAAE,IAAI;QACbC,MAAM,EAAE,IAAI;QACZC,OAAO,EAAE;MACX;IACF,CAAC;EACH,CAAC;EACDE,QAAQ,EAAE;IACRC,WAAWA,CAAA,EAAG;MACZ,OAAO,IAAI,CAACN,QAAQ,CAACC,OAAM,IAAK,IAAI,CAACD,QAAQ,CAACE,MAAK,IAAK,IAAI,CAACF,QAAQ,CAACG,OAAO;IAC/E;EACF,CAAC;EACDI,OAAO,EAAE;IACPC,iBAAiBA,CAAA,EAAG;MAClB,IAAI,CAACX,eAAc,GAAI,IAAI;MAC3B,IAAI,CAACC,iBAAgB,GAAI,KAAK;MAC9B,IAAI,CAACC,mBAAkB,GAAI,KAAK;IAClC,CAAC;IACDU,YAAYA,CAACC,QAAQ,EAAE;MACrB,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;QAAEC,IAAI,EAAE,MAAM;QAAEC,MAAM,EAAE;UAAEC,IAAI,EAAEL;QAAS;MAAE,CAAC,CAAC;MAC/D,IAAI,CAACZ,iBAAgB,GAAI,IAAI;MAC7B,IAAI,CAACC,mBAAkB,GAAI,KAAK;IAClC,CAAC;IACDiB,cAAcA,CAAA,EAAG;MACf,IAAI,CAACjB,mBAAkB,GAAI,IAAI;MAC/B,IAAI,CAACD,iBAAgB,GAAI,KAAK;IAChC,CAAC;IACDmB,eAAeA,CAACC,MAAM,EAAE;MACtB,IAAI,CAAClB,QAAQ,CAACkB,MAAM,CAACR,QAAQ,IAAI,IAAI;MACrC,IAAI,CAACN,WAAW,CAACc,MAAM,CAACR,QAAQ,IAAIQ,MAAM;IAC5C;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}