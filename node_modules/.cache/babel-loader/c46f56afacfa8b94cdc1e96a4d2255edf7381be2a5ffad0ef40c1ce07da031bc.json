{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelSelect as _vModelSelect, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-ab905f6e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"vote-page\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  class: \"vote-form\"\n};\nconst _hoisted_4 = [\"disabled\"];\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"\",\n  disabled: \"\"\n}, \"请选择\", -1 /* HOISTED */));\nconst _hoisted_6 = [\"value\"];\nconst _hoisted_7 = [\"disabled\"];\nconst _hoisted_8 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$data.selectedVoteType ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"h2\", null, \"请为你喜欢的\" + _toDisplayString($data.voteTypeMap[$data.selectedVoteType]) + \"投票\", 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_3, [_withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedOption = $event),\n    disabled: $data.hasVoted[$data.selectedVoteType],\n    class: \"vote-select\"\n  }, [_hoisted_5, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.options, option => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: option.id,\n      value: option.id\n    }, _toDisplayString(option.name), 9 /* TEXT, PROPS */, _hoisted_6);\n  }), 128 /* KEYED_FRAGMENT */))], 8 /* PROPS */, _hoisted_4), [[_vModelSelect, $data.selectedOption]]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.submitVote && $options.submitVote(...args)),\n    disabled: $data.hasVoted[$data.selectedVoteType],\n    class: \"vote-button\"\n  }, \"Vote\", 8 /* PROPS */, _hoisted_7)]), $data.hasVoted[$data.selectedVoteType] ? (_openBlock(), _createElementBlock(\"p\", _hoisted_8, \"您已为 \" + _toDisplayString($data.selectedCampaignName) + \" 投票,选项为:\" + _toDisplayString($data.selectedOptionName[$data.selectedVoteType]), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementVNode","value","disabled","_createElementBlock","_hoisted_1","$data","selectedVoteType","_hoisted_2","_toDisplayString","voteTypeMap","_hoisted_3","_cache","$event","selectedOption","hasVoted","_hoisted_5","_Fragment","_renderList","options","option","id","name","_hoisted_6","_hoisted_4","onClick","args","$options","submitVote","_hoisted_7","_hoisted_8","selectedCampaignName","selectedOptionName","_createCommentVNode"],"sources":["/Users/wangxiao/voting_front/src/components/VotePage.vue"],"sourcesContent":["<!-- VotePage.vue -->\n<template>\n  <div class=\"vote-page\">\n    <div v-if=\"selectedVoteType\">\n      <h2>请为你喜欢的{{ voteTypeMap[selectedVoteType] }}投票</h2>\n      <div class=\"vote-form\">\n        <select v-model=\"selectedOption\" :disabled=\"hasVoted[selectedVoteType]\" class=\"vote-select\">\n          <option value=\"\" disabled>请选择</option>\n          <option v-for=\"option in options\" :key=\"option.id\" :value=\"option.id\">\n            {{ option.name }}\n          </option>\n        </select>\n        <button @click=\"submitVote\" :disabled=\"hasVoted[selectedVoteType]\" class=\"vote-button\">Vote</button>\n      </div>\n      <p v-if=\"hasVoted[selectedVoteType]\">您已为 {{ selectedCampaignName }} 投票,选项为:{{ selectedOptionName[selectedVoteType] }}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      selectedVoteType: '',\n      selectedOption: '',\n      selectedCampaignId: '',\n      selectedCampaignName: '',\n      selectedOptionName: {\n        project: '',\n        people: '',\n        product: ''\n      },\n      hasVoted: {\n        project: false,\n        people: false,\n        product: false\n      },\n      voteTypeMap: {\n        project: 'Project Vote',\n        people: 'People Vote',\n        product: 'Product Vote'\n      },\n      options: []\n    };\n  },\n  computed: {\n    votedResult() {\n      return this.$root.votedResult[this.selectedVoteType];\n    }\n  },\n  watch: {\n    '$route.params.type': {\n      immediate: true,\n      handler(newType) {\n        this.selectedVoteType = newType;\n        this.fetchOptions();\n        this.loadVotedResult();\n      }\n    }\n  },\n  methods: {\n    fetchOptions() {\n      axios.get(`http://localhost:3000/api/options/${this.selectedVoteType}`)\n        .then(response => {\n          this.options = response.data;\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    },\n    loadVotedResult() {\n      if (this.votedResult) {\n        this.hasVoted[this.selectedVoteType] = true;\n        this.selectedOption = this.votedResult.selectedOption;\n        this.selectedOptionName[this.selectedVoteType] = this.votedResult.selectedOptionName;\n      } else {\n        this.hasVoted[this.selectedVoteType] = false;\n        this.selectedOption = '';\n        this.selectedOptionName[this.selectedVoteType] = '';\n      }\n    },\n    submitVote() {\n      if (!this.selectedOption) {\n        return;\n      }\n      axios.post(`http://localhost:3000/api/vote/${this.selectedVoteType}`, { selectedOption: this.selectedOption })\n        .then(() => {\n          this.hasVoted[this.selectedVoteType] = true;\n          this.selectedOptionName[this.selectedVoteType] = this.options.find(option => option.id === this.selectedOption).name;\n          const result = {\n            voteType: this.selectedVoteType,\n            selectedOption: this.selectedOption,\n            selectedOptionName: this.selectedOptionName[this.selectedVoteType]\n          };\n          this.$emit('vote-submitted', result);\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    }\n  }\n};\n</script>\n\n\n<style scoped>\n.vote-form {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.vote-select {\n  margin-bottom: 10px;\n  width: 200px;\n  padding: 8px;\n  font-size: 16px;\n}\n\n.vote-button {\n  background-color: #007bff;\n  color: #fff;\n  border: none;\n  padding: 10px 20px;\n  cursor: pointer;\n  font-size: 16px;\n}\n\n.vote-button:disabled {\n  background-color: #ccc;\n  cursor: not-allowed;\n}\n\nselect:disabled {\n  background-color: #f0f0f0;\n}\n</style>"],"mappings":";;;EAEOA,KAAK,EAAC;AAAW;;EAFxBC,GAAA;AAAA;;EAKWD,KAAK,EAAC;AAAW;mBAL5B;gEAOUE,mBAAA,CAAsC;EAA9BC,KAAK,EAAC,EAAE;EAACC,QAAQ,EAAR;GAAS,KAAG;mBAPvC;mBAAA;;EAAAH,GAAA;AAAA;;uBAEEI,mBAAA,CAcM,OAdNC,UAcM,GAbOC,KAAA,CAAAC,gBAAgB,I,cAA3BH,mBAAA,CAYM,OAfVI,UAAA,GAIMP,mBAAA,CAAoD,YAAhD,QAAM,GAAAQ,gBAAA,CAAGH,KAAA,CAAAI,WAAW,CAACJ,KAAA,CAAAC,gBAAgB,KAAI,IAAE,iBAC/CN,mBAAA,CAQM,OARNU,UAQM,G,gBAPJV,mBAAA,CAKS;IAXjB,uBAAAW,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAMyBP,KAAA,CAAAQ,cAAc,GAAAD,MAAA;IAAGV,QAAQ,EAAEG,KAAA,CAAAS,QAAQ,CAACT,KAAA,CAAAC,gBAAgB;IAAGR,KAAK,EAAC;MAC5EiB,UAAsC,G,kBACtCZ,mBAAA,CAESa,SAAA,QAVnBC,WAAA,CAQmCZ,KAAA,CAAAa,OAAO,EAAjBC,MAAM;yBAArBhB,mBAAA,CAES;MAF0BJ,GAAG,EAAEoB,MAAM,CAACC,EAAE;MAAGnB,KAAK,EAAEkB,MAAM,CAACC;wBAC7DD,MAAM,CAACE,IAAI,wBAT1BC,UAAA;kDAAAC,UAAA,I,gBAMyBlB,KAAA,CAAAQ,cAAc,E,GAM/Bb,mBAAA,CAAoG;IAA3FwB,OAAK,EAAAb,MAAA,QAAAA,MAAA,UAAAc,IAAA,KAAEC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;IAAGvB,QAAQ,EAAEG,KAAA,CAAAS,QAAQ,CAACT,KAAA,CAAAC,gBAAgB;IAAGR,KAAK,EAAC;KAAc,MAAI,iBAZnG8B,UAAA,E,GAcevB,KAAA,CAAAS,QAAQ,CAACT,KAAA,CAAAC,gBAAgB,K,cAAlCH,mBAAA,CAAyH,KAd/H0B,UAAA,EAc2C,MAAI,GAAArB,gBAAA,CAAGH,KAAA,CAAAyB,oBAAoB,IAAG,UAAQ,GAAAtB,gBAAA,CAAGH,KAAA,CAAA0B,kBAAkB,CAAC1B,KAAA,CAAAC,gBAAgB,qBAdvH0B,mBAAA,e,KAAAA,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}