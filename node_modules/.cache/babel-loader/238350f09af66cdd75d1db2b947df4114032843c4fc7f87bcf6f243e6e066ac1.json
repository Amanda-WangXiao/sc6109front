{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  name: 'VotePage',\n  data() {\n    return {\n      campaigns: [],\n      selectedCampaign: null,\n      selectedOption: null,\n      selectedCampaignOptions: [],\n      showOptions: false,\n      votedCampaigns: [],\n      verifyResult: null\n    };\n  },\n  methods: {\n    async fetchCampaigns() {\n      try {\n        const response = await axios.get('/api/campaigns');\n        this.campaigns = response.data;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async fetchCampaignOptions() {\n      try {\n        const response = await axios.get(`/api/campaign/${this.selectedCampaign}`);\n        if (response.data.options) {\n          this.selectedCampaignOptions = response.data.options;\n          this.showOptions = true;\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async submitVote() {\n      try {\n        if (typeof window.ethereum !== 'undefined') {\n          await window.ethereum.request({\n            method: 'eth_requestAccounts'\n          });\n          const accounts = await window.ethereum.request({\n            method: 'eth_accounts'\n          });\n          const address = accounts[0];\n          console.log('Your Address:' + address);\n          const response = await axios.post('http://localhost:3000/cast', {\n            address: address,\n            message: {\n              option: this.selectedOption\n            },\n            campianId: this.selectedCampaign\n          });\n          console.log(response.data);\n          if (response.data.res === 'Voted!') {\n            alert('投票成功！');\n            this.votedCampaigns.push(this.selectedCampaign);\n          } else {\n            alert('投票失败,请重试。');\n          }\n        } else {\n          alert('请安装 MetaMask 扩展程序。');\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async verifyMerkleProof() {\n      try {\n        const response = await axios.post('http://localhost:3000/verifyMerkleProof', {\n          address: '0x4666365259838F50626bcea066B40D4FB6583B95',\n          voteHash: 'vote_hash_here',\n          merkleProof: 'merkle_proof_here',\n          merkleRoot: 'merkle_root_here'\n        });\n        this.verifyResult = response.data;\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  },\n  created() {\n    this.fetchCampaigns();\n  }\n};","map":{"version":3,"names":["axios","name","data","campaigns","selectedCampaign","selectedOption","selectedCampaignOptions","showOptions","votedCampaigns","verifyResult","methods","fetchCampaigns","response","get","error","console","fetchCampaignOptions","options","submitVote","window","ethereum","request","method","accounts","address","log","post","message","option","campianId","res","alert","push","verifyMerkleProof","voteHash","merkleProof","merkleRoot","created"],"sources":["/Users/wangxiao/voting_front/src/components/VotePage.vue"],"sourcesContent":["<template>\n  <div class=\"vote-page\">\n    <div class=\"container\">\n      <div class=\"campaign-select\">\n        <p>请选择想投票的 Campaign：</p>\n        <select v-model=\"selectedCampaign\">\n          <option v-for=\"campaign in campaigns\" :key=\"campaign.voting_id\" :value=\"campaign.voting_id\" :disabled=\"!campaign.is_active\">\n            {{ campaign.name }}\n          </option>\n        </select>\n        <button @click=\"fetchCampaignOptions\" class=\"check-button\">Check</button>\n      </div>\n      <div class=\"vote-options\" v-if=\"showOptions\">\n        <p>请选择：</p>\n        <select v-model=\"selectedOption\" :disabled=\"votedCampaigns.includes(selectedCampaign)\">\n          <option v-for=\"(option, index) in selectedCampaignOptions\" :key=\"index\" :value=\"option\">\n            {{ option }}\n          </option>\n        </select>\n        <button @click=\"submitVote\" class=\"vote-button\" :disabled=\"votedCampaigns.includes(selectedCampaign)\">Vote</button>\n        <div class=\"verify-merkle-proof\" v-if=\"votedCampaigns.includes(selectedCampaign)\">\n          <p>Verify Merkle Proof:</p>\n          <button @click=\"verifyMerkleProof\" class=\"verify-button\">Verify</button>\n          <p v-if=\"verifyResult !== null\">验证结果：{{ verifyResult ? 'true' : 'false' }}</p>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'VotePage',\n  data() {\n    return {\n      campaigns: [],\n      selectedCampaign: null,\n      selectedOption: null,\n      selectedCampaignOptions: [],\n      showOptions: false,\n      votedCampaigns: [],\n      verifyResult: null,\n    };\n  },\n  methods: {\n    async fetchCampaigns() {\n      try {\n        const response = await axios.get('/api/campaigns');\n        this.campaigns = response.data;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async fetchCampaignOptions() {\n      try {\n        const response = await axios.get(`/api/campaign/${this.selectedCampaign}`);\n        if (response.data.options) {\n          this.selectedCampaignOptions = response.data.options;\n          this.showOptions = true;\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async submitVote() {\n      try {\n        if (typeof window.ethereum !== 'undefined') {\n          await window.ethereum.request({ method: 'eth_requestAccounts' });\n          const accounts = await window.ethereum.request({ method: 'eth_accounts' });\n          const address = accounts[0];\n          console.log('Your Address:'+address);\n          \n          const response = await axios.post('http://localhost:3000/cast', {\n            address: address,\n            message: {\n              option: this.selectedOption,\n            },\n            campianId: this.selectedCampaign,\n          });\n\n          console.log(response.data);\n          if (response.data.res === 'Voted!') {\n            alert('投票成功！');\n            this.votedCampaigns.push(this.selectedCampaign);\n          } else {\n            alert('投票失败,请重试。');\n          }\n        } else {\n          alert('请安装 MetaMask 扩展程序。');\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async verifyMerkleProof() {\n      try {\n        const response = await axios.post('http://localhost:3000/verifyMerkleProof', {\n          address: '0x4666365259838F50626bcea066B40D4FB6583B95',\n          voteHash: 'vote_hash_here',\n          merkleProof: 'merkle_proof_here',\n          merkleRoot: 'merkle_root_here',\n        });\n        this.verifyResult = response.data;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n  },\n  created() {\n    this.fetchCampaigns();\n  },\n};\n</script>\n\n\n\n<style scoped>\n.vote-page {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n}\n\n.container {\n  display: flex;\n  justify-content: center; /* 修改为 center 以使选择栏和投票页面都居中 */\n  align-items: flex-start;\n  width: 80%;\n}\n\n.campaign-select {\n  width: 45%;\n  text-align: center;\n  margin-top: 30px;\n  margin-right: 20px; /* 添加右边距以在选择栏和投票页面之间创建间隔 */\n}\n\n.vote-options {\n  width: 45%;\n  text-align: center;\n  margin-top: 40px;\n}\n\n.campaign-select p,\n.vote-options p {\n  margin-bottom: 10px;\n}\n\n.vote-options select {\n  width: 200px;\n  margin-bottom: 20px;\n}\n\n.vote-button {\n  display: block;\n  margin: 0 auto;\n  padding: 10px 20px;\n  font-size: 16px;\n}\n</style>\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}