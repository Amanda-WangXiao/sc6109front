{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      votedResults: {}\n    };\n  },\n  methods: {\n    getCampaignName(voteType) {\n      switch (voteType) {\n        case 'project':\n          return 'Project Vote';\n        case 'people':\n          return 'People Vote';\n        case 'product':\n          return 'Product Vote';\n        default:\n          return '';\n      }\n    }\n  },\n  mounted() {\n    axios.get('/api/results').then(response => {\n      this.votedResults = response.data;\n    }).catch(error => console.error('Error fetching results:', error));\n  }\n};","map":{"version":3,"names":["axios","data","votedResults","methods","getCampaignName","voteType","mounted","get","then","response","catch","error","console"],"sources":["/Users/wangxiao/voting_front/src/components/ResultPage.vue"],"sourcesContent":["<template>\n  <div class=\"result-page\">\n    <h2 class=\"result-title\">投票结果</h2>\n    <div class=\"result-container\">\n      <div v-for=\"(result, voteType) in votedResults\" :key=\"voteType\" class=\"result-section\">\n        <h3 class=\"campaign-name\">{{ getCampaignName(voteType) }} Result</h3>\n        <table class=\"result-table\">\n          <thead>\n            <tr>\n              <th>Option Name</th>\n              <th>Votes</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"(option, index) in result.options\" :key=\"index\">\n              <td>{{ option.name }}</td>\n              <td>{{ option.votes }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      votedResults: {}\n    };\n  },\n  methods: {\n    getCampaignName(voteType) {\n      switch (voteType) {\n        case 'project':\n          return 'Project Vote';\n        case 'people':\n          return 'People Vote';\n        case 'product':\n          return 'Product Vote';\n        default:\n          return '';\n      }\n    }\n  },\n  mounted() {\n    axios.get('/api/results')\n      .then(response => {\n        this.votedResults = response.data;\n      })\n      .catch(error => console.error('Error fetching results:', error));\n  }\n};\n</script>\n\n\n\n<style scoped>\n.result-page {\n  text-align: center;\n}\n\n.result-title {\n  margin-bottom: 30px;\n}\n\n.result-container {\n  display: flex;\n  justify-content: space-around;\n}\n\n.result-section {\n  width: 30%;\n}\n\n.campaign-name {\n  position: relative;\n  padding-bottom: 10px;\n  margin-bottom: 20px;\n}\n\n.campaign-name::after {\n  content: \"\";\n  position: absolute;\n  bottom: 0;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 80px;\n  height: 2px;\n  background-color: #ccc;\n}\n\n.result-table {\n  width: 100%;\n  border-collapse: collapse;\n}\n\nth, td {\n  padding: 8px;\n  text-align: center;\n}\n\nth {\n  background-color: #f0f0f0;\n}\n\ntd {\n  border-bottom: 1px solid #ddd;\n}\n\nth:first-child,\ntd:first-child {\n  text-align: left;\n  padding-right: 20px;\n}\n</style>"],"mappings":"AA0BA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE,CAAC;IACjB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,eAAeA,CAACC,QAAQ,EAAE;MACxB,QAAQA,QAAQ;QACd,KAAK,SAAS;UACZ,OAAO,cAAc;QACvB,KAAK,QAAQ;UACX,OAAO,aAAa;QACtB,KAAK,SAAS;UACZ,OAAO,cAAc;QACvB;UACE,OAAO,EAAE;MACb;IACF;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACRN,KAAK,CAACO,GAAG,CAAC,cAAc,EACrBC,IAAI,CAACC,QAAO,IAAK;MAChB,IAAI,CAACP,YAAW,GAAIO,QAAQ,CAACR,IAAI;IACnC,CAAC,EACAS,KAAK,CAACC,KAAI,IAAKC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC,CAAC;EACpE;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}