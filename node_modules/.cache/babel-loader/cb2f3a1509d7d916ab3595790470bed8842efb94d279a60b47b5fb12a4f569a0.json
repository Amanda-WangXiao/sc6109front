{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      selectedVoteType: '',\n      selectedOption: '',\n      selectedOptionName: {},\n      hasVoted: {},\n      voteTypeMap: {\n        project: 'Project Vote',\n        people: 'People Vote',\n        product: 'Product Vote'\n      },\n      options: []\n    };\n  },\n  watch: {\n    '$route.params.type': {\n      immediate: true,\n      handler(newType) {\n        this.selectedVoteType = newType;\n        this.fetchOptions();\n      }\n    }\n  },\n  methods: {\n    async fetchOptions() {\n      try {\n        const response = await axios.get(`/api/options/${this.selectedVoteType}`);\n        this.options = response.data;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async submitVote() {\n      if (!this.selectedOption) {\n        return;\n      }\n      try {\n        await axios.post('/api/vote', {\n          voteType: this.selectedVoteType,\n          selectedOption: this.selectedOption\n        });\n        this.hasVoted[this.selectedVoteType] = true;\n        this.selectedOptionName[this.selectedVoteType] = this.options.find(option => option.id === this.selectedOption).name;\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","selectedVoteType","selectedOption","selectedOptionName","hasVoted","voteTypeMap","project","people","product","options","watch","immediate","handler","newType","fetchOptions","methods","response","get","error","console","submitVote","post","voteType","find","option","id","name"],"sources":["/Users/wangxiao/voting_front/src/components/VotePage.vue"],"sourcesContent":["<!-- VotePage.vue -->\n<template>\n  <div class=\"vote-page\">\n    <div v-if=\"selectedVoteType\">\n      <h2>请为你喜欢的{{ voteTypeMap[selectedVoteType] }}投票</h2>\n      <div class=\"vote-form\">\n        <select v-model=\"selectedOption\" :disabled=\"hasVoted[selectedVoteType]\" class=\"vote-select\">\n          <option value=\"\" disabled>请选择</option>\n          <option v-for=\"option in options\" :key=\"option.id\" :value=\"option.id\">\n            {{ option.name }}\n          </option>\n        </select>\n        <button @click=\"submitVote\" :disabled=\"hasVoted[selectedVoteType]\" class=\"vote-button\">Vote</button>\n      </div>\n      <p v-if=\"hasVoted[selectedVoteType]\">您已为 {{ selectedVoteType }} 投票,选项为:{{ selectedOptionName[selectedVoteType] }}</p>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      selectedVoteType: '',\n      selectedOption: '',\n      selectedOptionName: {},\n      hasVoted: {},\n      voteTypeMap: {\n        project: 'Project Vote',\n        people: 'People Vote',\n        product: 'Product Vote'\n      },\n      options: []\n    };\n  },\n  watch: {\n    '$route.params.type': {\n      immediate: true,\n      handler(newType) {\n        this.selectedVoteType = newType;\n        this.fetchOptions();\n      }\n    }\n  },\n  methods: {\n    async fetchOptions() {\n      try {\n        const response = await axios.get(`/api/options/${this.selectedVoteType}`);\n        this.options = response.data;\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async submitVote() {\n      if (!this.selectedOption) {\n        return;\n      }\n      try {\n        await axios.post('/api/vote', {\n          voteType: this.selectedVoteType,\n          selectedOption: this.selectedOption\n        });\n        this.hasVoted[this.selectedVoteType] = true;\n        this.selectedOptionName[this.selectedVoteType] = this.options.find(option => option.id === this.selectedOption).name;\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* ... */\n</style>\n\n\n\n<style scoped>\n.vote-form {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.vote-select {\n  margin-bottom: 10px;\n  width: 200px;\n  padding: 8px;\n  font-size: 16px;\n}\n\n.vote-button {\n  background-color: #007bff;\n  color: #fff;\n  border: none;\n  padding: 10px 20px;\n  cursor: pointer;\n  font-size: 16px;\n}\n\n.vote-button:disabled {\n  background-color: #ccc;\n  cursor: not-allowed;\n}\n\nselect:disabled {\n  background-color: #f0f0f0;\n}\n</style>"],"mappings":"AAoBA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,gBAAgB,EAAE,EAAE;MACpBC,cAAc,EAAE,EAAE;MAClBC,kBAAkB,EAAE,CAAC,CAAC;MACtBC,QAAQ,EAAE,CAAC,CAAC;MACZC,WAAW,EAAE;QACXC,OAAO,EAAE,cAAc;QACvBC,MAAM,EAAE,aAAa;QACrBC,OAAO,EAAE;MACX,CAAC;MACDC,OAAO,EAAE;IACX,CAAC;EACH,CAAC;EACDC,KAAK,EAAE;IACL,oBAAoB,EAAE;MACpBC,SAAS,EAAE,IAAI;MACfC,OAAOA,CAACC,OAAO,EAAE;QACf,IAAI,CAACZ,gBAAe,GAAIY,OAAO;QAC/B,IAAI,CAACC,YAAY,CAAC,CAAC;MACrB;IACF;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,YAAYA,CAAA,EAAG;MACnB,IAAI;QACF,MAAME,QAAO,GAAI,MAAMjB,KAAK,CAACkB,GAAG,CAAE,gBAAe,IAAI,CAAChB,gBAAiB,EAAC,CAAC;QACzE,IAAI,CAACQ,OAAM,GAAIO,QAAQ,CAAChB,IAAI;MAC9B,EAAE,OAAOkB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IACD,MAAME,UAAUA,CAAA,EAAG;MACjB,IAAI,CAAC,IAAI,CAAClB,cAAc,EAAE;QACxB;MACF;MACA,IAAI;QACF,MAAMH,KAAK,CAACsB,IAAI,CAAC,WAAW,EAAE;UAC5BC,QAAQ,EAAE,IAAI,CAACrB,gBAAgB;UAC/BC,cAAc,EAAE,IAAI,CAACA;QACvB,CAAC,CAAC;QACF,IAAI,CAACE,QAAQ,CAAC,IAAI,CAACH,gBAAgB,IAAI,IAAI;QAC3C,IAAI,CAACE,kBAAkB,CAAC,IAAI,CAACF,gBAAgB,IAAI,IAAI,CAACQ,OAAO,CAACc,IAAI,CAACC,MAAK,IAAKA,MAAM,CAACC,EAAC,KAAM,IAAI,CAACvB,cAAc,CAAC,CAACwB,IAAI;MACtH,EAAE,OAAOR,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}