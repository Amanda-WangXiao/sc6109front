{"ast":null,"code":"export default {\n  data() {\n    return {\n      selectedVoteType: '',\n      selectedOption: '',\n      selectedCampaignId: '',\n      selectedOptionName: '',\n      hasVoted: false,\n      voteTypeMap: {\n        project: 'Project',\n        people: 'People',\n        product: 'Product'\n      },\n      options: []\n    };\n  },\n  methods: {\n    showVoteForm(voteType) {\n      this.selectedVoteType = voteType;\n      this.fetchOptions();\n      this.resetForm();\n    },\n    fetchOptions() {\n      // 模拟从后端获取选项数据，根据不同的投票类型获取相应的选项\n      let options = [];\n      if (this.selectedVoteType === 'project') {\n        options = [{\n          id: 1,\n          name: 'Project 1'\n        }, {\n          id: 2,\n          name: 'Project 2'\n        }, {\n          id: 3,\n          name: 'Project 3'\n        }];\n      } else if (this.selectedVoteType === 'people') {\n        options = [{\n          id: 1,\n          name: 'Person 1'\n        }, {\n          id: 2,\n          name: 'Person 2'\n        }, {\n          id: 3,\n          name: 'Person 3'\n        }];\n      } else if (this.selectedVoteType === 'product') {\n        options = [{\n          id: 1,\n          name: 'Product 1'\n        }, {\n          id: 2,\n          name: 'Product 2'\n        }, {\n          id: 3,\n          name: 'Product 3'\n        }];\n      }\n      this.options = options;\n    },\n    submitVote() {\n      // 提交投票请求到后端\n      // 这里简化处理，直接更新数据\n      this.hasVoted = true;\n      this.selectedCampaignId = 'Campaign123';\n      this.selectedOptionName = this.options.find(option => option.id === this.selectedOption).name;\n    },\n    resetForm() {\n      this.selectedOption = '';\n      this.hasVoted = false;\n    }\n  }\n};","map":{"version":3,"names":["data","selectedVoteType","selectedOption","selectedCampaignId","selectedOptionName","hasVoted","voteTypeMap","project","people","product","options","methods","showVoteForm","voteType","fetchOptions","resetForm","id","name","submitVote","find","option"],"sources":["/Users/wangxiao/voting_front/src/components/VotePage.vue"],"sourcesContent":["<!-- VotePage.vue -->\n<template>\n    <div class=\"vote-page\">\n      <div class=\"vote-buttons\">\n        <button @click=\"showVoteForm('project')\">Project Vote</button>\n        <button @click=\"showVoteForm('people')\">People Vote</button>\n        <button @click=\"showVoteForm('product')\">Product Vote</button>\n      </div>\n      <div v-if=\"selectedVoteType\">\n        <h2>请为你喜欢的{{ voteTypeMap[selectedVoteType] }}投票</h2>\n        <select v-model=\"selectedOption\" :disabled=\"hasVoted\">\n          <option value=\"\" disabled>请选择</option>\n          <option v-for=\"option in options\" :key=\"option.id\" :value=\"option.id\">\n            {{ option.name }}\n          </option>\n        </select>\n        <button @click=\"submitVote\" :disabled=\"hasVoted\" class=\"vote-button\">Vote</button>\n        <p v-if=\"hasVoted\">您已为 {{ selectedCampaignId }} 投票，选项为：{{ selectedOptionName }}</p>\n      </div>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    data() {\n      return {\n        selectedVoteType: '',\n        selectedOption: '',\n        selectedCampaignId: '',\n        selectedOptionName: '',\n        hasVoted: false,\n        voteTypeMap: {\n          project: 'Project',\n          people: 'People',\n          product: 'Product'\n        },\n        options: []\n      }\n    },\n    methods: {\n      showVoteForm(voteType) {\n        this.selectedVoteType = voteType;\n        this.fetchOptions();\n        this.resetForm();\n      },\n      fetchOptions() {\n        // 模拟从后端获取选项数据，根据不同的投票类型获取相应的选项\n        let options = [];\n        if (this.selectedVoteType === 'project') {\n          options = [\n            { id: 1, name: 'Project 1' },\n            { id: 2, name: 'Project 2' },\n            { id: 3, name: 'Project 3' }\n          ];\n        } else if (this.selectedVoteType === 'people') {\n          options = [\n            { id: 1, name: 'Person 1' },\n            { id: 2, name: 'Person 2' },\n            { id: 3, name: 'Person 3' }\n          ];\n        } else if (this.selectedVoteType === 'product') {\n          options = [\n            { id: 1, name: 'Product 1' },\n            { id: 2, name: 'Product 2' },\n            { id: 3, name: 'Product 3' }\n          ];\n        }\n        this.options = options;\n      },\n      submitVote() {\n        // 提交投票请求到后端\n        // 这里简化处理，直接更新数据\n        this.hasVoted = true;\n        this.selectedCampaignId = 'Campaign123';\n        this.selectedOptionName = this.options.find(option => option.id === this.selectedOption).name;\n      },\n      resetForm() {\n        this.selectedOption = '';\n        this.hasVoted = false;\n      }\n    }\n  }\n  </script>\n  \n  \n  <style scoped>\n  .vote-buttons {\n    margin-bottom: 20px;\n  }\n  \n  .vote-button {\n    background-color: #007bff;\n    color: #fff;\n    border: none;\n    padding: 10px 20px;\n    margin-top: 10px;\n    cursor: pointer;\n  }\n  \n  .vote-button:disabled {\n    background-color: #ccc;\n    cursor: not-allowed;\n  }\n  \n  select:disabled {\n    background-color: #f0f0f0;\n  }\n  </style>"],"mappings":"AAuBE,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,gBAAgB,EAAE,EAAE;MACpBC,cAAc,EAAE,EAAE;MAClBC,kBAAkB,EAAE,EAAE;MACtBC,kBAAkB,EAAE,EAAE;MACtBC,QAAQ,EAAE,KAAK;MACfC,WAAW,EAAE;QACXC,OAAO,EAAE,SAAS;QAClBC,MAAM,EAAE,QAAQ;QAChBC,OAAO,EAAE;MACX,CAAC;MACDC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,YAAYA,CAACC,QAAQ,EAAE;MACrB,IAAI,CAACZ,gBAAe,GAAIY,QAAQ;MAChC,IAAI,CAACC,YAAY,CAAC,CAAC;MACnB,IAAI,CAACC,SAAS,CAAC,CAAC;IAClB,CAAC;IACDD,YAAYA,CAAA,EAAG;MACb;MACA,IAAIJ,OAAM,GAAI,EAAE;MAChB,IAAI,IAAI,CAACT,gBAAe,KAAM,SAAS,EAAE;QACvCS,OAAM,GAAI,CACR;UAAEM,EAAE,EAAE,CAAC;UAAEC,IAAI,EAAE;QAAY,CAAC,EAC5B;UAAED,EAAE,EAAE,CAAC;UAAEC,IAAI,EAAE;QAAY,CAAC,EAC5B;UAAED,EAAE,EAAE,CAAC;UAAEC,IAAI,EAAE;QAAY,EAC5B;MACH,OAAO,IAAI,IAAI,CAAChB,gBAAe,KAAM,QAAQ,EAAE;QAC7CS,OAAM,GAAI,CACR;UAAEM,EAAE,EAAE,CAAC;UAAEC,IAAI,EAAE;QAAW,CAAC,EAC3B;UAAED,EAAE,EAAE,CAAC;UAAEC,IAAI,EAAE;QAAW,CAAC,EAC3B;UAAED,EAAE,EAAE,CAAC;UAAEC,IAAI,EAAE;QAAW,EAC3B;MACH,OAAO,IAAI,IAAI,CAAChB,gBAAe,KAAM,SAAS,EAAE;QAC9CS,OAAM,GAAI,CACR;UAAEM,EAAE,EAAE,CAAC;UAAEC,IAAI,EAAE;QAAY,CAAC,EAC5B;UAAED,EAAE,EAAE,CAAC;UAAEC,IAAI,EAAE;QAAY,CAAC,EAC5B;UAAED,EAAE,EAAE,CAAC;UAAEC,IAAI,EAAE;QAAY,EAC5B;MACH;MACA,IAAI,CAACP,OAAM,GAAIA,OAAO;IACxB,CAAC;IACDQ,UAAUA,CAAA,EAAG;MACX;MACA;MACA,IAAI,CAACb,QAAO,GAAI,IAAI;MACpB,IAAI,CAACF,kBAAiB,GAAI,aAAa;MACvC,IAAI,CAACC,kBAAiB,GAAI,IAAI,CAACM,OAAO,CAACS,IAAI,CAACC,MAAK,IAAKA,MAAM,CAACJ,EAAC,KAAM,IAAI,CAACd,cAAc,CAAC,CAACe,IAAI;IAC/F,CAAC;IACDF,SAASA,CAAA,EAAG;MACV,IAAI,CAACb,cAAa,GAAI,EAAE;MACxB,IAAI,CAACG,QAAO,GAAI,KAAK;IACvB;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}