{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      selectedVoteType: '',\n      selectedOption: '',\n      selectedCampaignId: '',\n      selectedCampaignName: '',\n      selectedOptionName: {\n        project: '',\n        people: '',\n        product: ''\n      },\n      hasVoted: {\n        project: false,\n        people: false,\n        product: false\n      },\n      allVotesSubmitted: false,\n      voteTypeMap: {\n        project: 'Project Vote',\n        people: 'People Vote',\n        product: 'Product Vote'\n      },\n      options: [],\n      voteResults: []\n    };\n  },\n  watch: {\n    '$route.params.type': {\n      immediate: true,\n      handler(newType) {\n        this.selectedVoteType = newType;\n        this.fetchOptions();\n        this.loadVotedResult();\n      }\n    }\n  },\n  mounted() {\n    this.fetchOptions();\n  },\n  methods: {\n    fetchOptions() {\n      let options = [];\n      if (this.selectedVoteType === 'project') {\n        options = [{\n          id: 1,\n          name: 'Project 1'\n        }, {\n          id: 2,\n          name: 'Project 2'\n        }, {\n          id: 3,\n          name: 'Project 3'\n        }];\n        this.selectedCampaignId = 1;\n        this.selectedCampaignName = 'Project Vote';\n      } else if (this.selectedVoteType === 'people') {\n        options = [{\n          id: 1,\n          name: 'Alice'\n        }, {\n          id: 2,\n          name: 'Bob'\n        }, {\n          id: 3,\n          name: 'Charlie'\n        }];\n        this.selectedCampaignId = 2;\n        this.selectedCampaignName = 'People Vote';\n      } else if (this.selectedVoteType === 'product') {\n        options = [{\n          id: 1,\n          name: 'Apple'\n        }, {\n          id: 2,\n          name: 'Banana'\n        }, {\n          id: 3,\n          name: 'Orange'\n        }];\n        this.selectedCampaignId = 3;\n        this.selectedCampaignName = 'Product Vote';\n      }\n      this.options = options;\n    },\n    loadVotedResult() {\n      // This should load any existing results from a store or an API\n    },\n    submitAllVotes() {\n      this.allVotesSubmitted = true;\n      // You would typically use Vuex or an event bus to send data to another component\n      this.$emit('all-votes-submitted', this.voteResults);\n    },\n    submitVote() {\n      if (!this.selectedOption) {\n        alert('Please select an option before voting!');\n        return;\n      }\n      this.hasVoted[this.selectedVoteType] = true;\n      const optionName = this.options.find(option => option.id === this.selectedOption).name;\n      this.selectedOptionName[this.selectedVoteType] = optionName;\n      const result = {\n        campaignId: this.selectedCampaignId,\n        optionId: this.selectedOption,\n        campaignName: this.selectedCampaignName,\n        optionName\n      };\n      this.voteResults.push(result);\n      // Emit the single vote result\n      this.$emit('vote-submitted', result);\n    }\n  }\n};","map":{"version":3,"names":["data","selectedVoteType","selectedOption","selectedCampaignId","selectedCampaignName","selectedOptionName","project","people","product","hasVoted","allVotesSubmitted","voteTypeMap","options","voteResults","watch","immediate","handler","newType","fetchOptions","loadVotedResult","mounted","methods","id","name","submitAllVotes","$emit","submitVote","alert","optionName","find","option","result","campaignId","optionId","campaignName","push"],"sources":["/Users/wangxiao/voting_front/src/components/ResultPage.vue"],"sourcesContent":["<script>\nexport default {\n  data() {\n    return {\n      selectedVoteType: '',\n      selectedOption: '',\n      selectedCampaignId: '',\n      selectedCampaignName: '',\n      selectedOptionName: { project: '', people: '', product: '' },\n      hasVoted: { project: false, people: false, product: false },\n      allVotesSubmitted: false,\n      voteTypeMap: { project: 'Project Vote', people: 'People Vote', product: 'Product Vote' },\n      options: [],\n      voteResults: []\n    };\n  },\n  watch: {\n    '$route.params.type': {\n      immediate: true,\n      handler(newType) {\n        this.selectedVoteType = newType;\n        this.fetchOptions();\n        this.loadVotedResult();\n      }\n    }\n  },\n  mounted() {\n    this.fetchOptions();\n  },\n  methods: {\n    fetchOptions() {\n      let options = [];\n      if (this.selectedVoteType === 'project') {\n        options = [{ id: 1, name: 'Project 1' }, { id: 2, name: 'Project 2' }, { id: 3, name: 'Project 3' }];\n        this.selectedCampaignId = 1;\n        this.selectedCampaignName = 'Project Vote';\n      } else if (this.selectedVoteType === 'people') {\n        options = [{ id: 1, name: 'Alice' }, { id: 2, name: 'Bob' }, { id: 3, name: 'Charlie' }];\n        this.selectedCampaignId = 2;\n        this.selectedCampaignName = 'People Vote';\n      } else if (this.selectedVoteType === 'product') {\n        options = [{ id: 1, name: 'Apple' }, { id: 2, name: 'Banana' }, { id: 3, name: 'Orange' }];\n        this.selectedCampaignId = 3;\n        this.selectedCampaignName = 'Product Vote';\n      }\n      this.options = options;\n    },\n    loadVotedResult() {\n      // This should load any existing results from a store or an API\n    },\n    submitAllVotes() {\n      this.allVotesSubmitted = true;\n      // You would typically use Vuex or an event bus to send data to another component\n      this.$emit('all-votes-submitted', this.voteResults);\n    },\n    submitVote() {\n      if (!this.selectedOption) {\n        alert('Please select an option before voting!');\n        return;\n      }\n      this.hasVoted[this.selectedVoteType] = true;\n      const optionName = this.options.find(option => option.id === this.selectedOption).name;\n      this.selectedOptionName[this.selectedVoteType] = optionName;\n      const result = {\n        campaignId: this.selectedCampaignId,\n        optionId: this.selectedOption,\n        campaignName: this.selectedCampaignName,\n        optionName\n      };\n      this.voteResults.push(result);\n      // Emit the single vote result\n      this.$emit('vote-submitted', result);\n    }\n  }\n};\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}